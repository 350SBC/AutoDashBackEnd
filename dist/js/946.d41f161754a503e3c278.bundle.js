(()=>{var e={562:function(e,t,n){var o,r;r="undefined"!=typeof window?window:void 0!==n.g?n.g:this,o=function(){return function(e,t){var n=function(o,r,s){var i,a,c={close:function(){}},u=this,E=0,f=-1,l=!1,R=!1,d=Object.assign({},n.defaultOptions,"function"==typeof s?{shouldReconnect:s}:s);if("number"!=typeof d.timeout)throw new Error("timeout must be the number of milliseconds to timeout a connection attempt");if("function"!=typeof d.shouldReconnect)throw new Error("shouldReconnect must be a function that returns the number of milliseconds to wait for a reconnect attempt, or null or undefined to not reconnect.");function O(){a&&(clearTimeout(a),a=null)}["bufferedAmount","url","readyState","protocol","extensions"].forEach((function(e){Object.defineProperty(u,e,{get:function(){return c[e]}})}));var p=function(e){l&&(O(),A(e))},_=function(){l=!0,c.close(1e3)},T=!1;function g(){T&&(e.removeEventListener("online",p),e.removeEventListener("offline",_),T=!1)}function A(e){if(!d.shouldReconnect.handle1000&&1e3===e.code||R)E=0;else if(!1!==t.onLine){var n=d.shouldReconnect(e,u);"number"==typeof n&&(a=setTimeout(I,n))}else l=!0}function I(){var t="function"==typeof o?o(u):o;a=null,(c=new WebSocket(t,r||void 0)).binaryType=u.binaryType,E++,u.dispatchEvent(Object.assign(new CustomEvent("connecting"),{attempts:E,reconnects:f})),i=setTimeout((function(){i=null,g(),u.dispatchEvent(Object.assign(new CustomEvent("timeout"),{attempts:E,reconnects:f}))}),d.timeout),["open","close","message","error"].forEach((function(e){c.addEventListener(e,(function(t){u.dispatchEvent(t);var n=u["on"+e];if("function"==typeof n)return n.apply(u,arguments)}))})),d.ignoreConnectivityEvents||T||(e.addEventListener("online",p),e.addEventListener("offline",_),T=!0)}u.send=function(){return c.send.apply(c,arguments)},u.close=function(e,t){return"number"!=typeof e&&(t=e,e=1e3),O(),l=!1,R=!0,g(),c.close(e,t)},u.open=function(){c.readyState!==WebSocket.OPEN&&c.readyState!==WebSocket.CONNECTING&&(O(),l=!1,R=!1,I())},Object.defineProperty(u,"listeners",{value:{open:[function(e){i&&(clearTimeout(i),i=null),e.reconnects=++f,e.attempts=E,E=0,l=!1}],close:[A]}}),Object.defineProperty(u,"attempts",{get:function(){return E},enumerable:!0}),Object.defineProperty(u,"reconnects",{get:function(){return f},enumerable:!0}),d.automaticOpen&&I()};return n.defaultOptions={timeout:4e3,shouldReconnect:function(e,t){if(1008!==e.code&&1011!==e.code)return[0,3e3,1e4][t.attempts]},ignoreConnectivityEvents:!1,automaticOpen:!0},n.prototype.binaryType="blob",n.prototype.addEventListener=function(e,t){e in this.listeners||(this.listeners[e]=[]),this.listeners[e].push(t)},n.prototype.removeEventListener=function(e,t){if(e in this.listeners)for(var n=this.listeners[e],o=0,r=n.length;o<r;o++)if(n[o]===t)return void n.splice(o,1)},n.prototype.dispatchEvent=function(e){if(e.type in this.listeners)for(var t=this.listeners[e.type],n=0,o=t.length;n<o;n++)t[n].call(this,e)},n}(r,navigator)}.call(t,n,t,e),void 0===o||(e.exports=o)}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var s=t[o]={exports:{}};return e[o].call(s.exports,s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(562),t=n.n(e);let o=0;const r=(e=!1)=>(e&&(o=0),o++),s={PEDAL_POSITION:r(),RPM:r(),RTC:r(),FUEL_PRESSURE:r(),SPEEDO:r(),INJECTOR_PULSEWIDTH:r(),FUEL_FLOW:r(),CLOSED_LOOP_STATUS:r(),DUTY_CYCLE:r(),AFR_LEFT:r(),CLOSED_LOOP_COMP:r(),AFR_RIGHT:r(),TARGET_AFR:r(),AFR_AVERAGE:r(),IGNITION_TIMING:r(),MAP:r(),KNOCK_RETARD:r(),MAT:r(),TPS:r(),BAR_PRESSURE:r(),CTS:r(),OIL_PRESSURE:r(),BATT_VOLTAGE:r(),ODOMETER:r(),TRIP_ODOMETER:r(),GPS_SPEEED:r(),WARNINGS:r(),FUEL_LEVEL:r(),CURRENT_MPG:r(),AVERAGE_MPG:r(),AVERAGE_MPG_POINTS:r(),AVERAGE_MPG_POINT_INDEX:r(),LOW_LIGHT_DETECTED:r(),MAX_AVERAGE_POINTS:100},i={BATT_VOLTAGE:r(!0),OIL_PRESSURE:r(),LOW_FUEL:r(),ENGINE_TEMPERATURE:r(),ECU_COMM:r(),GPS_NOT_ACQUIRED:r(),GPS_ERROR:r(),COMM_ERROR:r()},a=(()=>{let e=[];for(const[t,n]of Object.entries(s))e[n]=0;return{get:t=>e[t],getWarning:t=>!!(e[s.WARNINGS]&128>>t%8),set:(t,n)=>{e[t]=n},setWarning:(t,n)=>{if(t>7)throw"I screwed up: error - bit field key cannot be > 7";e[s.WARNINGS]=n?e[s.WARNINGS]|128>>t%8:e[s.WARNINGS]&~(128>>t%8)},data:e}})();t().prototype.binaryType="arraybuffer";const c=e=>{(e=>{try{a.set(s.PEDAL_POSITION,e.getInt8(0)),a.set(s.RPM,e.getInt16(1)),a.set(s.FUEL_FLOW,e.getInt16(3)),a.set(s.TARGET_AFR,e.getFloat32(5)),a.set(s.AFR_AVERAGE,e.getFloat32(9)),a.set(s.IGNITION_TIMING,e.getFloat32(13)),a.set(s.MAP,e.getInt16(17)),a.set(s.MAT,e.getInt16(19)),a.set(s.CTS,e.getInt16(21)),a.set(s.BAR_PRESSURE,e.getFloat32(23)),a.set(s.OIL_PRESSURE,e.getInt16(27)),a.set(s.BATT_VOLTAGE,e.getFloat32(29)),a.set(s.WARNINGS,e.getUint8(33)),a.set(s.ODOMETER,e.getInt16(34)),a.set(s.TRIP_ODOMETER,e.getInt16(36)),a.set(s.GPS_SPEEED,e.getInt16(38)),a.set(s.FUEL_LEVEL,e.getInt8(40)),a.set(s.CURRENT_MPG,e.getFloat32(41)),a.set(s.AVERAGE_MPG,e.getFloat32(45)),a.set(s.AVERAGE_MPG_POINTS,new class{constructor(e,t,n,o){this.buffer=new Uint8Array(e,t,n),this.frontOffset=o,this.buffer=new Uint8Array([...this.buffer.subarray(this.frontOffset),...this.buffer.subarray(0,this.frontOffset)])}get front(){return this.buffer[this.frontOffset]}}(e.buffer,49,100,e.getInt8(149))),a.set(s.LOW_LIGHT_DETECTED,e.getInt8(150))}catch(e){console.error(e)}})(new DataView(e.data))};let u=null;onmessage=e=>{switch(e.data.msg){case"start":u=(()=>{a.setWarning(i.COMM_ERROR,!0);let e=new(t())("ws://localhost:3333",null,{timeout:3e4,shouldReconnect:()=>0,ignoreConnectivityEvents:!1});return e.addEventListener("open",(function(e){a.setWarning(i.COMM_ERROR,!1)})),e.addEventListener("close",(e=>{a.setWarning(i.COMM_ERROR,!0)})),e.addEventListener("error",(e=>{a.setWarning(i.COMM_ERROR,!0)})),e.addEventListener("message",(e=>c(e))),e})();break;case"process_update_data":postMessage({msg:"update_data_ready",updateData:a.data})}}})()})();